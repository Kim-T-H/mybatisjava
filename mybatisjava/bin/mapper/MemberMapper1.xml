<?xml version="1.0" encoding="UTF-8" ?>
<!-- /src/mapper/MemberMapper1.xml -->
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="member">
<!-- 
id 속성 : 유일한 값. sql 구문을 구별하는 유일한 코드값. namespace가 다른경우는 다른 구문으로 봄. 중복 불가.
resultType 속성: sql구문의 결과값을 리턴해주는 자료형 지정.
	int : sql 구문의 결과값이 정수형 한개인 경우
	Member: 컬럼명과 set 프로퍼티이름이 같은 경우 자동으로 저장됨.
			mapper.Member 클래스의 객체로 저장됨. 
			
	#{value} : 
		value가 문자열형:	값+자료형. where id=#{value} => where id='admin'
		value가 숫자형: where gender=#{value} => where gender=1
	${value} : 값의 치환
		where name like '%${value}%' => where name like '%트%'
		where name like '%#{value}%' => where name like '%트%' => 오류  %트%->%'트'% 로 인식해서.
		
-->
	<sql id="cols">id, pass pw, name, tel, email, picture, gender</sql>
	
	<select id="count" resultType="int">
		select count(*) from member
	</select>
 	<select id="list" resultType="Member">
		<!-- select * from member -->
		select <include refid="cols"/> from member
	</select>
	<select id="selectid" resultType="Member" parameterType="String">
		select <include refid="cols"/> from member 
		where id=#{value}
	</select>
	<select id="selectname" resultType="Member" parameterType="String">
	 select id, pass pw, name, tel, email, picture, gender from member
	 where name like '%${value}%'
	</select>
	
	<select id="selectname2" resultType="Member" parameterType="String">
	 select <include refid="cols"/> from member
	 where name like #{value}
	</select>
	
	<select id="selectnamegender" resultType="Member" parameterType="map">
	 select <include refid="cols"/> from member
	 where name like #{name} and gender= #{gender}
	</select>
	
</mapper>